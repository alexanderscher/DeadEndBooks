generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Book {
  id          Int       @id @default(autoincrement())
  title       String
  author      String
  publisher   String
  medium      String
  photo_front String
  photo_back  String
  inStock     Boolean
  Cue         Cue[]
  Current     Current[]
  History     History[]
}

model Current {
  id           Int     @id @default(autoincrement())
  bookId       Int
  book         Book    @relation(fields: [bookId], references: [id])
  User         User?   @relation(fields: [userId], references: [id])
  userId       Int?
  started_date String
  return_date  String
  isLate       Boolean
  daysLate     Int
}

model History {
  id           Int    @id @default(autoincrement())
  bookId       Int
  book         Book   @relation(fields: [bookId], references: [id])
  User         User?  @relation(fields: [userId], references: [id])
  userId       Int?
  started_date String
  return_date  String
}

model Cue {
  id     Int    @id @default(autoincrement())
  bookId Int
  book   Book   @relation(fields: [bookId], references: [id])
  User   User?  @relation(fields: [userId], references: [id])
  userId Int?
  date   String
}

model Address {
  id      Int    @id @default(autoincrement())
  address String
  zipcode String
  city    String
  state   String
  country String
  phone   String
  userId  Int    @unique
  user    User   @relation(name: "UserAddress", fields: [userId], references: [id])
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  password   String
  name       String
  admin      Boolean
  addressId  Int?      @unique
  address    Address?  @relation(name: "UserAddress")
  subscribed Boolean
  Current    Current[]
  History    History[]
  Cue        Cue[]
}
